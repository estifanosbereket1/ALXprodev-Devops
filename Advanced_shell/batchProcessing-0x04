#!/bin/bash

mkdir -p pokemon_data

pokemon_list=(bulbasaur ivysaur venusaur charmander charmeleon)
max_retries=3
retry_delay=2

fetch_pokemon() {
  local name=$1
  local attempt=1
  local success=false
  local API_URL="https://pokeapi.co/api/v2/pokemon/$name"

  echo "Fetching data for $name..."

  while [ $attempt -le $max_retries ]; do
    response=$(curl -s -w "%{http_code}" -o "pokemon_data/${name}.json" "$API_URL")

    if [ "$response" -eq 200 ]; then
      echo "Saved data to pokemon_data/${name}.json âœ…"
      success=true
      break
    else
      echo "Attempt $attempt failed for $name (Status: $response). Retrying in $retry_delay seconds..."
      rm -f "pokemon_data/${name}.json"
      ((attempt++))
      sleep $retry_delay
    fi
  done

  if [ "$success" = false ]; then
    echo "Failed to fetch data for $name after $max_retries attempts. Skipping and logging error."
    echo "[$(date)] Failed to fetch data for $name after $max_retries attempts (Status: $response)" >> pokemon_data/errors.log
  fi
}

# Launch all fetches in background
for name in "${pokemon_list[@]}"; do
  fetch_pokemon "$name" &
done

# Wait for all background jobs to complete
wait

echo "All fetches completed."
